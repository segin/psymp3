#summary A Win32 window class implemented by MSN Messenger and other compatible messengers
#labels Phase-Implementation

= Introduction =

The MsnMsgrUiManager window class is implemented by Windows Live Messsenger, MSN Messenger, and my any messenger application (or associated plugins thereof) that wish to receive "Now Playing" data from any media player application that supports sending such data to MSN Messenger.

= Known Implementations = 

== Messengers == 

The following instant messaging applications are known to implement the receiving end of the interface:
  * [http://download.live.com/messenger Windows Live Messenger]
  * *[http://www.pidgin.im/ Pidgin]* (via [http://code.google.com/p/pidgin-musictracker pidgin-musictracker])
  * *[http://www.amsn-project.net/ aMSN]* (via the [http://www.amsn-project.net/plugins.php#13 Music] plugin)

== Media Players ==

The following media players are known to implement the sending end of the interface:
  * *PsyMP3*
  * [http://www.microsoft.com/windows/windowsmedia/player/ Windows Media Player]
  * [http://www.apple.com/itunes iTunes]
  * [http://www.last.fm/download Last.fm Client]
  * [http://getopenpandora.appspot.com/ OpenPandora]
  * [http://mpc-hc.sourceforge.net/ Media Player Classic Home Cinema]
  * [http://getsongbird.com/ Songbird] (via the [http://addons.songbirdnest.com/addon/1204 LiveTweeter] extension)
  * [http://www.spotify.com/ Spotify]
  * [http://wwwct.ttplayer.com/index.html TTPlayer]
  * [http://www.videolan.org/vlc/ VLC (VideoLan Client) Media Player]

= Details =

The MsnMsgrUiManager Now Playing interface is rather straightforward. The sender program (the media player) sends a [http://msdn.microsoft.com/en-us/library/ms649011(VS.85).aspx WM_COPYDATA] message to any and all windows matching the MsnMsgrUiManager window class using the [http://msdn.microsoft.com/en-us/library/ms644950(VS.85).aspx SendMessage]()  function.

The [http://msdn.microsoft.com/en-us/library/ms649011(VS.85).aspx WM_COPYDATA] message type requires the use of the [http://msdn.microsoft.com/en-us/library/ms649010(VS.85).aspx COPYDATASTRUCT] struct, which has three defined elements:
  * dwData, which indicates the data type
  * cbData, which indicates the length of the data buffer pointed to by lpData, and finally
  * lpData, which is a pointer to a buffer containing the data to be passed via [http://msdn.microsoft.com/en-us/library/ms644950(VS.85).aspx SendMessage]()

The actual message data passed via lpData is a wide-character string, terminated by a null character. The data fields are delimited by literal wide-character "\0" (literal backslash and literal zero, NOT a null-value wide character).

The fields are described below:
  # [iTunes extension] Player name. If you don't really care, leave it empty.
  # Message type. There a number of things you could put here, but the only important value for this is "Music".
  # Status Enabled. Does the message enable or disable the now playing information? When announcing a new song, this is "1", and at the end of a song (to clear the now playing from the messenger), this is "0".
  # Format string - This is only really important for MSN Messenger and Windows Live Messenger. It is either string data to be used literally, or tokens referencing the argument strings, which come next. 